<Activity mc:Ignorable="sap sap2010" x:Class="_1_6_Report" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="argIn_str_ModelPath" Type="InArgument(x:String)" />
    <x:Property Name="argIn_dbl_Score" Type="InArgument(x:Double)" />
    <x:Property Name="argIn_int_NbObservations" Type="InArgument(x:Int32)" />
    <x:Property Name="argIn_timespan_Duration" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="argIn_str_ResultsPath" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PredictorTemplatePath" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_ConfigPath" Type="InArgument(x:String)" />
    <x:Property Name="argIn_list_ColumnNames" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="argIn_str_ConfusionMatrix" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotTrainingResults" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotTestResults" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_ScalerXPath" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_ScalerYPath" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_LabelencoderPath" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotConfusionMatrix" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotROC" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotKSStatistic" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotCumulativeGain" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotPrecisionRecall" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotLiftCurve" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotLearningCurve" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_PlotFeatureImportances" Type="InArgument(x:String)" />
    <x:Property Name="argIn_str_Errors" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>691,7694</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Web</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="1_6_Report" sap:VirtualizedContainerService.HintSize="651,7614" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="629,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="=== Opening Report">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="629,7228" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="611,7001" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="str_HTMLPageContent" />
            <Variable x:TypeArguments="x:String" Default="html\dist\temp.1_6_report.html" Name="str_HTMLPageURI" />
            <Variable x:TypeArguments="x:String" Name="str_Result" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReadTextFile Content="[str_HTMLPageContent]" DisplayName="Read Text File" FileName="html\dist\1_6_report.html" sap:VirtualizedContainerService.HintSize="589,59" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadTextFile>
          <Assign sap:VirtualizedContainerService.HintSize="589,60" sap2010:WorkflowViewState.IdRef="Assign_19">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{errors}", System.Web.HttpUtility.HtmlEncode(argIn_str_Errors).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="589,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{model-path}", System.Web.HttpUtility.HtmlEncode(argIn_str_ModelPath).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="589,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{results-path}", System.Web.HttpUtility.HtmlEncode(argIn_str_ResultsPath).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="589,60" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{template-path}", System.Web.HttpUtility.HtmlEncode(argIn_str_PredictorTemplatePath).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="589,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{score}", System.Web.HttpUtility.HtmlEncode(Math.Round(argIn_dbl_Score, 2)).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="589,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{duration}", System.Web.HttpUtility.HtmlEncode(String.Format("{0:00}:{1:00}:{2:00}", argIn_timespan_Duration.Hours, argIn_timespan_Duration.Minutes, argIn_timespan_Duration.Seconds)).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="589,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{observations}", System.Web.HttpUtility.HtmlEncode(argIn_int_NbObservations).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[Not argIn_str_PlotTrainingResults Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotTrainingResults.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-training-results}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotTrainingResults).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotTestResults Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotTestResults.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-test-results}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotTestResults).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotConfusionMatrix Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotConfusionMatrix.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_8">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-confusion-matrix}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotConfusionMatrix).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotCumulativeGain Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotCumulativeGain.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_10">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-cumulative-gain}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotCumulativeGain).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotFeatureImportances Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotFeatureImportances.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_12">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-feature-importances}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotFeatureImportances).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotKSStatistic Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotKSStatistic.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_14">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-ks-statistic}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotKSStatistic).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotLearningCurve Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotLearningCurve.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_16">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-learning-curve}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotLearningCurve).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotLiftCurve Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotLiftCurve.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_18">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-lift-curve}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotLiftCurve).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotPrecisionRecall Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotPrecisionRecall.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_20">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-precision-recall}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotPrecisionRecall).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <If Condition="[Not argIn_str_PlotROC Is Nothing]" sap:VirtualizedContainerService.HintSize="589,356" sap2010:WorkflowViewState.IdRef="If_23">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <If Condition="[Not argIn_str_PlotROC.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_22">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{plot-roc}", System.Web.HttpUtility.HtmlEncode(argIn_str_PlotROC).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </If.Then>
          </If>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="589,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="611,478" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[Not argIn_str_ConfusionMatrix Is Nothing]" sap:VirtualizedContainerService.HintSize="589,354" sap2010:WorkflowViewState.IdRef="If_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <If Condition="[Not argIn_str_ConfusionMatrix.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="464,207" sap2010:WorkflowViewState.IdRef="If_7">
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_HTMLPageContent]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[str_HTMLPageContent.Replace("{confusion-matrix}", System.Web.HttpUtility.HtmlEncode(argIn_str_ConfusionMatrix).Replace(vbCrLf, "").Replace("    ", "").Replace(vbTab, ""))]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                  </If.Then>
                </If>
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <ui:WriteTextFile DisplayName="Write Text File" FileName="[str_HTMLPageURI]" sap:VirtualizedContainerService.HintSize="589,87" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[str_HTMLPageContent]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:WriteTextFile>
          <ui:CustomInput DisplayName="Custom Input" sap:VirtualizedContainerService.HintSize="589,82" sap2010:WorkflowViewState.IdRef="CustomInput_1" Result="[str_Result]" URI="[str_HTMLPageURI]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CustomInput>
          <If Condition="[str_Result.Trim.Equals(&quot;generate-template&quot;)]" DisplayName="Generate predictor template if user asked" sap:VirtualizedContainerService.HintSize="589,1716" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="336,1568" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable()]" Name="dt_Columns" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[argIn_str_PredictorTemplatePath]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="resources/HandyML_Predictor_Template.xlsx" />
                <ui:WriteCell Cell="B1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="314,115" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="HandyML_Predictor" Text="[argIn_str_ModelPath]" WorkbookPath="[argIn_str_PredictorTemplatePath]" />
                <ui:WriteCell Cell="B2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="314,115" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="HandyML_Predictor" Text="[argIn_str_ConfigPath]" WorkbookPath="[argIn_str_PredictorTemplatePath]" />
                <ui:WriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="314,115" sap2010:WorkflowViewState.IdRef="WriteCell_3" SheetName="HandyML_Predictor" Text="[argIn_str_ScalerXPath]" WorkbookPath="[argIn_str_PredictorTemplatePath]" />
                <ui:WriteCell Cell="B4" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="314,115" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="HandyML_Predictor" Text="[argIn_str_ScalerYPath]" WorkbookPath="[argIn_str_PredictorTemplatePath]" />
                <ui:WriteCell Cell="B5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="314,115" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="HandyML_Predictor" Text="[argIn_str_LabelencoderPath]" WorkbookPath="[argIn_str_PredictorTemplatePath]" />
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="314,390" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[argIn_list_ColumnNames]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="240,256" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="218,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:DataColumnCollection">[dt_Columns.Columns]</InArgument>
                          </InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sd:DataColumn">[New DataColumn(column, GetType(Object))]</InArgument>
                        </InvokeMethod>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[argIn_list_ColumnNames.ToArray]" DataTable="[dt_Columns]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                <ui:WriteRange AddHeaders="False" DataTable="[dt_Columns]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="314,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="data" StartingCell="A1" WorkbookPath="[argIn_str_PredictorTemplatePath]" />
              </Sequence>
            </If.Then>
          </If>
          <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="589,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[str_HTMLPageURI]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="615,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="336,277" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[String.Format(&quot;Error while displaying Report: {0}&quot;, exception.Message)]" />
              <Rethrow sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="629,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="=== End of Report">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>